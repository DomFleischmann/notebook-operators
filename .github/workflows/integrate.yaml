name: CI

on:
  - push
  - pull_request

jobs:
  lint:
    name: Lint Check
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt install python3-pip tox

    - name: Lint code
      run: tox -e lint

  deploy:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - uses: balchua/microk8s-actions@v0.2.2
      with:
        channel: '1.20/stable'
        addons: '["dns", "storage", "rbac"]'

    - name: Install dependencies
      run: |
        set -eux
        sudo pip3 install charmcraft
        sudo snap install charm --classic
        sudo snap install juju --classic
        sudo snap install juju-helpers --classic
        sudo snap install juju-wait --classic
        sudo apt update
        sudo apt install -y firefox-geckodriver
        sudo pip3 install -r test-requirements.txt

    - name: Bootstrap
      run: |
        set -eux
        sg microk8s -c 'juju bootstrap microk8s uk8s'
        juju add-model kubeflow

    - name: Deploy istio-pilot
      run: |
        set -eux
        juju deploy cs:istio-pilot
        juju wait -wvt 300

    - name: Deploy Jupyter
      run: |
        set -eux
        juju bundle deploy --build
        juju relate istio-pilot jupyter-ui
        juju wait -wvt 300

    - name: Test Jupyter
      run: pytest -vvs
      if: always()

    - name: Get pod statuses
      run: kubectl get all -A
      if: failure()

    - name: Get notebooks
      run: kubectl get notebooks -A
      if: failure()

    - name: Get juju status
      run: juju status
      if: failure()

    - name: Get jupyter-controller workload logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-app=jupyter-controller
      if: failure()

    - name: Get jupyter-controller operator logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-operator=jupyter-controller
      if: failure()

    - name: Get jupyter-ui workload logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-app=jupyter-ui
      if: failure()

    - name: Get jupyter-ui operator logs
      run: kubectl logs --tail 100 -nkubeflow -ljuju-operator=jupyter-ui
      if: failure()

    - name: Upload selenium screenshots
      uses: actions/upload-artifact@v2
      with:
        name: selenium-screenshots
        path: /tmp/selenium-*.png
      if: failure()
